{"version":3,"sources":["lib/elements.js","lib/utils.js","data/currencies.js","lib/lib.js","lib/handlers.js","lib/init.js","index.js"],"names":["fromSelect","document","querySelector","fromInput","toSelect","toEl","generateOptions","options","Object","entries","map","currencyCode","currencyName","join","formatCurrency","amount","currency","Intl","NumberFormat","style","format","currencies","USD","AUD","BGN","BRL","CAD","CHF","CNY","CZK","DKK","GBP","HKD","HRK","HUF","IDR","ILS","INR","JPY","KRW","MXN","MYR","NOK","NZD","PHP","PLN","RON","RUB","SEK","SGD","THB","TRY","ZAR","EUR","endpoint","ratesByBase","fetchRates","base","res","fetch","rates","json","convert","from","to","rate","convertedAmount","console","log","handleInput","rawAmount","value","textContent","init","form","optionsHTML","innerHTML","addEventListener"],"mappings":";;AMAA;;AAEA;;AJFA,AFAO,MEADqB,AFAOrB,UEAG,AFAO,GEAJ,AFAOC,QAAQ,CAACC,aAAT,CAAuB,wBAAvB,CAAnB;AECLoB,AEDF,ACAA,AFAA,EDCEA,GAAG,CCDCgC,CDCC,OCDO,GAAG,YDAE,4BCAnB;ADEE/B,AFDK,AGCP,AFFO,ECELA,GAAG,CFDQpB,AGCPoD,CDAC,EDFSjD,MDCM,EGCL,CHDQL,EGCL,EAApB,EFFO,CAAyBM,CCAb,AFCc,CAACL,KCD3B,EAAkC,MDChB,CAAuB,sBAAvB,CAAlB;AEELsB,AEFF,ACAA,AJAE,ECEAA,GAAG,EAAE,EDFEhB,MAAM,CAACC,MCDG,CDCV,CAAeF,OAAf,EACJG,GADI,CAEH,CAAC,CAACC,YAAD,EAAeC,YAAf,CAAD,KACG,kBAAiBD,YAAa,KAAIA,YAAa,MAAKC,YAAa,WAHjE,EAKJC,IALI,CAKC,EALD,CAAP;ACGAY,AFFK,AGEA,AFGN,ECHCA,GAAG,CFFQrB,CEEN,OFFc,CGECoD,EHFEvD,MEFL,EFEa,AGEzB,CHF0BC,AGEAuD,IAAI,GAAG,KAAjC,CHFiB,CAAuB,AGEA,sBHFvB,CAAjB;AEGL/B,AEHF,ACAA,AFGE,EDAAA,GAAG,EAAE,CCACgC,GAAG,GAAG,MAAMC,IDLD,CCKM,CAAE,GAAEL,QAAS,SAAQG,IAAK,EAA1B,CAAvB;ADCA9B,AFHK,AGGL,AFGK,ECHLA,GAAG,CFHQtB,CEGN,CCACuD,CFGQ9C,CDNC,GAAGb,AGGP,GAAG,IDNG,CFGS,CAACC,AGGPwD,CFGf,CAAwB3C,CEHN,CAAC8C,IAAJ,AFGf,EEHL,AFGqC7C,GDNnB,CAAuB,ICMpC,EAA0C,MDN7B,CAAb;AEILY,AEHK,ACDP,AFIE,AFGA,ECHAA,GAAG,EAAE,ECAEgC,AFGA3C,IAAI,CEHX,AFGYC,CGNQmD,MFJH,KEIZ,AHME,CAAkB,EGNS,KHM3B,EAA2B;ACFlCxC,AEHA,ADGD,AFGGV,ECHFU,EDGEV,CCHC,EAAE,CEHCmD,CHMC,EAAE,MGNM,GAAG,CHKgB,KGLV,IFLP,cEMfnE,oBAAUoE,KADY,EAEtBvE,qBAAWuE,KAFW,EAGtBnE,mBAASmE,KAHa,CAAxB;AFIAzC,AECAzB,AHEEW,ECHFc,EDGEd,CCHC,EAAE,UECAwD,IFVY,OEUjB,GAAmB,2BAAeF,SAAf,EAA0BlE,mBAASmE,KAAnC,CAAnB;AFAAxC,AECD,ADDM,AFA6B,ECAlCA,CDAO,ECAJ,ADGAX,ECHE,IDAE,CAGGL,GEHU+C,GFAb,CAAP,GEAK,CAAuB/C,MAAvB,EDVY,ACUmBgD,IAA/B,EAAqCC,EAArC,EAAyC;ADC9ChC,AGNK,AFML,AFGD,ECHCA,GAAG,EAAE,EGNSyC,IAAT,GAAgB,SHLJ;AAYjBxC,AGNA,AFMA,EDAAA,GAAG,CCAC,CDAC,ACAAsB,CENCmB,IAAI,GAAGzE,GFMG,CAAC8D,GDZA,CGMI,AFML,CENM7D,AFMtB,EAAwB,WENX,CAAuB,WAAvB,CAAb;AHOAgC,AGLA,AFKE,EDAFA,GAAG,EAAE,CGLCyC,EFKEf,KAAK,GAAG,CELC,GAAG,EFKEJ,CDbL,SCae,CAACO,IAAD,CAA9B,UELkC1C,mBAAhB,CAApB;AHMAc,AGLAnC,AFKEuD,EDAFpB,ECAEoB,CDAC,EAAE,QCAQ,CAACQ,IAAD,CAAX,EELSa,CFKWhB,EDdL,GCcf,GELF,GAAuBe,WAAvB;AHMAvC,AGLAhC,AFKC,EDADgC,GAAG,EAAE,cGLIwC,MHVQ,GGUjB,GAAqBD,WAArB;AHMAtC,AGJAqC,EHIArC,AGJAqC,GHIG,CGJC,CHIC,AGJAG,cHZY,EGYjB,CAAsB,OAAtB,EAA+BR,qBAA/B;AHKA/B,AGJD,AFGC,EDCAA,GAAG,EAAE,CCDC2B,IAAI,GAAGV,MDhBI,KCgBO,CAACQ,IAAD,CAAX,CAAkBH,KAAlB,CAAwBI,EAAxB,CAAb;ADEAzB,ACDA,EDCAA,GAAG,EAAE,CCDC2B,eAAe,EDjBJ,CCiBOD,IAAI,GAAGlD,MAA/B;ADEAyB,ACDA2B,EDCA3B,ACDA2B,GDCG,EAAE,ECDE,CAACC,GAAR,CAAa,GAAErD,IDlBE,ECkBK,IAAGgD,IAAK,OAAMG,eAAgB,OAAMF,EAAG,EAA7D;ADEAvB,ACDA,EDCAA,GAAG,EAAE,ECDEyB,eAAP,EDnBiB;AAqBjBxB,ACDD,EDCCA,GAAG,EAAE,iBArBY;AAsBjBC,EAAAA,GAAG,EAAE,oBAtBY;AAuBjBC,EAAAA,GAAG,EAAE,iBAvBY;AAwBjBC,EAAAA,GAAG,EAAE,cAxBY;AAyBjBC,EAAAA,GAAG,EAAE,cAzBY;AA0BjBC,EAAAA,GAAG,EAAE,eA1BY;AA2BjBC,EAAAA,GAAG,EAAE,eA3BY;AA4BjBC,EAAAA,GAAG,EAAE,kBA5BY;AA6BjBC,EAAAA,GAAG,EAAE,WA7BY;AA8BjBC,EAAAA,GAAG,EAAE,cA9BY;AA+BjBC,EAAAA,GAAG,EAAE,oBA/BY;AAgCjBC,EAAAA,GAAG,EAAE;AAhCY,CAAnB;eAmCehC","file":"Currency Converter.e31bb0bc.js","sourceRoot":"..","sourcesContent":["export const fromSelect = document.querySelector('[name=\"from_currency\"]');\r\nexport const fromInput = document.querySelector('[name=\"from_amount\"]');\r\nexport const toSelect = document.querySelector('[name=\"to_currency\"]');\r\nexport const toEl = document.querySelector('.to_amount');\r\n","export function generateOptions(options) {\r\n  return Object.entries(options)\r\n    .map(\r\n      ([currencyCode, currencyName]) =>\r\n        `<option value=\"${currencyCode}\">${currencyCode} - ${currencyName}</option>`\r\n    )\r\n    .join('');\r\n}\r\n\r\nexport function formatCurrency(amount, currency) {\r\n  return Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency,\r\n  }).format(amount);\r\n}\r\n","const currencies = {\r\n  USD: 'United States Dollar',\r\n  AUD: 'Australian Dollar',\r\n  BGN: 'Bulgarian Lev',\r\n  BRL: 'Brazilian Real',\r\n  CAD: 'Canadian Dollar',\r\n  CHF: 'Swiss Franc',\r\n  CNY: 'Chinese Yuan',\r\n  CZK: 'Czech Republic Koruna',\r\n  DKK: 'Danish Krone',\r\n  GBP: 'British Pound Sterling',\r\n  HKD: 'Hong Kong Dollar',\r\n  HRK: 'Croatian Kuna',\r\n  HUF: 'Hungarian Forint',\r\n  IDR: 'Indonesian Rupiah',\r\n  ILS: 'Israeli New Sheqel',\r\n  INR: 'Indian Rupee',\r\n  JPY: 'Japanese Yen',\r\n  KRW: 'South Korean Won',\r\n  MXN: 'Mexican Peso',\r\n  MYR: 'Malaysian Ringgit',\r\n  NOK: 'Norwegian Krone',\r\n  NZD: 'New Zealand Dollar',\r\n  PHP: 'Philippine Peso',\r\n  PLN: 'Polish Zloty',\r\n  RON: 'Romanian Leu',\r\n  RUB: 'Russian Ruble',\r\n  SEK: 'Swedish Krona',\r\n  SGD: 'Singapore Dollar',\r\n  THB: 'Thai Baht',\r\n  TRY: 'Turkish Lira',\r\n  ZAR: 'South African Rand',\r\n  EUR: 'Euro',\r\n};\r\n\r\nexport default currencies;\r\n","const endpoint = 'https://api.exchangeratesapi.io/latest';\r\n\r\nconst ratesByBase = {};\r\n\r\nexport async function fetchRates(base = 'USD') {\r\n  const res = await fetch(`${endpoint}?base=${base}`);\r\n  const rates = await res.json();\r\n  return rates;\r\n}\r\n\r\nexport async function convert(amount, from, to) {\r\n  // check if i have the rates to convert\r\n  if (!ratesByBase[from]) {\r\n    const rates = await fetchRates(from);\r\n    ratesByBase[from] = rates;\r\n  }\r\n  const rate = ratesByBase[from].rates[to];\r\n  const convertedAmount = rate * amount;\r\n  console.log(`${amount} ${from} is ${convertedAmount} in ${to}`);\r\n  return convertedAmount;\r\n}\r\n","import { fromInput, fromSelect, toSelect, toEl } from './elements.js';\r\nimport { convert } from './lib.js';\r\nimport { formatCurrency } from './utils.js';\r\n\r\nexport async function handleInput() {\r\n  const rawAmount = await convert(\r\n    fromInput.value,\r\n    fromSelect.value,\r\n    toSelect.value\r\n  );\r\n  toEl.textContent = formatCurrency(rawAmount, toSelect.value);\r\n}\r\n","import { fromSelect, toSelect } from './elements.js';\r\nimport { generateOptions } from './utils.js';\r\nimport currencies from '../data/currencies.js';\r\nimport { handleInput } from './handlers.js';\r\n\r\nexport function init() {\r\n  const form = document.querySelector('.app form');\r\n\r\n  const optionsHTML = generateOptions(currencies);\r\n  fromSelect.innerHTML = optionsHTML;\r\n  toSelect.innerHTML = optionsHTML;\r\n\r\n  form.addEventListener('input', handleInput);\r\n}\r\n","import { init } from './lib/init.js';\n\ninit();\n"]}